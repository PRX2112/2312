>>server.js

const express=require('express')
const mongoose=require('mongoose')
const app=express()
const routesStud=require('./routes/student_routes')
const routeLogin=require('./routes/login')
const cors=require('cors')

mongoose.connect('mongodb://localhost:27017/student')
app.use(express.json())
app.use(cors())
app.use('/student',routesStud)
app.use('/login',routeLogin)

app.listen(5000,()=>{
    console.log('server is running')
})

>>model>x_model.js

const mongoose=require('mongoose')
const signup=new mongoose.Schema({
    name:{
        type:String,
        require:true,
    },
    email:{
        type:String,
        require:true,
    },
    password:{
        type:String,
        require:true,
    },
    sign_date:{
        type:Date,
        default:Date.now
    }
})

module.exports=mongoose.model('student_master',signup)

>>routes>x_route.js

const express=require('express')
const router=express.Router()
const signupinfo=require('../models/student_models')


router.post('/signup', async (req,res)=>{
    const signupentry=new signupinfo({
        name:req.body.name,
        email:req.body.email,
        password:req.body.password,
    })
    signupentry.save()
})


router.get('/dispStudent',async(req,res)=>{
    const data= await signupinfo.find()
    res.json(data)
})


router.delete('/delete/:id',async(req,res)=>{
    try{
        const id=req.params.id
        const data=await signupinfo.findByIdAndDelete(id)
        res.send('Student data is deleted')
    }
    catch(error)
    {
        res.json({message:error.message})
    }
})

//get data by id


router.get('/getOneStudent/:id',async(req,res)=>{
    try{
        const data=await signupinfo.findById(req.params.id)
        res.json(data)
    }
    catch(error)
    {
        res.json({message:error.message})
    }
})

router.patch('/updateStud/:id',async(req,res)=>{
    const result = await signupinfo.findByIdAndUpdate(req.params.id,{
        name : req.body.name,
        email : req.body.email,
        password : req.body.password
    })
    res.send("Updated Successfully")
})

router.get('/search/:key',async(req,res)=>{
    const result = await signupinfo.find({
        "$or":[
            {name : {$regex : req.params.key}},
            {email : {$regex : req.params.key}}
        ]
    })
    res.json(result)
})

module.exports=router

>>test.rest

POST http://localhost:5000/student/signup
content-type: application/json

{
    "name": "PRX",
    "email": "prxdata@gmail.com",
    "password":"PRX2312"
}

###

GET http://localhost:5000/student/dispStudent

###

GET http://localhost:5000/student/getOneStudent/6372817ff30f9d8392e3423a

###

PATCH http://localhost:5000/student/updateStud/6372817ff30f9d8392e3423a
###

GET http://localhost:5000/student/search/prx

>>client

>>App.js


import './App.css';
import {Routes,Route} from 'react-router-dom'
import CreateStudent from './comp/CreateStudent'
import DisplayStudent from './comp/DisplayStudent' 
import Header from './comp/Header'
import Login from './comp/Login';
import Logout from './comp/Logout';
import UpdateStudent from './comp/UpdateStudent';

function App() {
  return (
    <div className="App">
       <div>
      <Header/>
      <Routes>
        <Route path='/' element={<DisplayStudent/>} exact/>
        <Route path='/Addstudents' element={<CreateStudent/>} exact/>
        <Route path='/UpdateStudent/:id' element={<UpdateStudent/>} exact/>
        <Route path='/Login' element={<Login/>} exact/>
        <Route path='/Logout' element={<Logout/>} exact/>
        <Route path='*' element={<DisplayStudent/>} exact/>
      </Routes>  
      </div>
    </div>
  );
}

export default App;

>>createdata

import React,{useState} from 'react'
import axios from 'axios'
import { useNavigate } from 'react-router-dom'

const CreateStudent = () => {
    let navigate=useNavigate()
    const [name,setName]=useState('')
    const [email,setEmail]=useState('')
    const [password,setPassword]=useState('')
    const handleName=(e)=>{
        setName(e.target.value)
    }
    const handleEmail=(e)=>{
        setEmail(e.target.value)
    }
    const handlePassword=(e)=>{
        setPassword(e.target.value)
    }
    const collectData=()=>{
        try{
        let insertData=axios.post('http://localhost:5000/student/signup',{
            name,
            email,
            password

        });
        if(insertData)
        {
            navigate('/',{replace:true})
            navigate(0)
        }
    }
    catch(error)
    {
        console.log(error)
    }
    }
  return (
    <div className='App'>
      <header className='App-header'>
        <h3>Student Registration</h3>
        <label>
            Name:
        </label>
        <input type="text" name="name" value={name} required onChange={(e)=>handleName(e)}/><br/>
        <label>
            Email:
        </label>
        <input type="email" name="email" value={email} required onChange={(e)=>handleEmail(e)}/><br/>
        <label>
            Password:
        </label>
        <input type="password" name="password" value={password} required onChange={(e)=>handlePassword(e)}/><br/>
        <button type="button" name='submit'onClick={collectData}>Submit</button>
      </header>
    </div>
  )
}

export default CreateStudent

>>displaydata

import React, { useEffect, useState } from 'react'
import axios from 'axios'
import { NavLink } from 'react-router-dom'

const DisplayStudent = () => {
    const [data,setData]=useState([])
    const[key,setKey]=useState('')
    useEffect(()=>{
        
        getdata()
    },[])
    const getdata= async()=>{
      try{
      const result=await axios.get('http://localhost:5000/student/dispStudent')
      setData(result.data)
      }
      catch(error)
      {
          console.log(error)
      }
  }
    const deleteStudent=async(id)=>{
      let result= await axios.delete(`http://localhost:5000/student/delete/${id}`)
      if(result){
        alert("student data deleted")
        getdata()
      }
    }
    const searchData = async(e)=>{
      let key=e.target.value
      if(key)
      {
      const result = await axios.get(`http://localhost:5000/student/search/${key}`)
      if(result)
      {
        setData(result.data)
      }
      else
      {
        getdata()
      }
      }
      
    }
    const studentrecord=data.map((d)=>{
        return(
            <tr className='bg-dark text-light' key={d}>
                <td>{d.name}</td>
                <td>{d.email}</td>
                <td>{d.password}</td>
                <td><button className='btn btn-sm btn-outline-light'><NavLink className='text-danger text-decoration-none' to={`UpdateStudent/`+d._id}>Edit</NavLink></button></td>
                <td><button className='btn btn-sm btn-outline-light' onClick={()=>deleteStudent(d._id)}>Delete</button></td>
            </tr>
        )
    })
  return (
    <div>
     : Search : <input className='form-control w-25 mx-auto' type="text" onChange={searchData}/>
      <table className='table table-hover'>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Password</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
        {studentrecord}
      </table>
    </div>
  )
}

export default DisplayStudent

>>updatedata

import React,{useState} from 'react'
import axios from 'axios'
import { useNavigate} from 'react-router-dom'
import { useEffect } from 'react'
import { useParams } from 'react-router-dom'

const UpdateStudent = () => {
    let navigate=useNavigate()
    const [name,setName]=useState('')
    const [email,setEmail]=useState('')
    const [password,setPassword]=useState('')
    const params=useParams()
    const handleName=(e)=>{
        setName(e.target.value)
    }
    const handleEmail=(e)=>{
        setEmail(e.target.value)
    }
    const handlePassword=(e)=>{
        setPassword(e.target.value)
    }
    const dispData= async() =>{
        const result=await axios.get(`http://localhost:5000/student/getOneStudent/${params.id}`)
        setName(result.data.name)
        setEmail(result.data.email)
        setPassword(result.data.password)
    }
    useEffect(()=>{
        dispData()
    },[])
    const collectData=async()=>{
        const result = await axios.patch(`http://localhost:5000/student/updateStud/${params.id}`,{
            name,email,password
        })

        if(result){
            navigate('/')
        }
}
  return (
    
      <div className='App'>
      <header className='App-header'>
        <h3>Student Registration</h3>
        <label>
            Name:
        </label>
        <input type="text" name="name" value={name} required onChange={(e)=>handleName(e)}/><br/>
        <label>
            Email:
        </label>
        <input type="email" name="email" value={email} required onChange={(e)=>handleEmail(e)}/><br/>
        <label>
            Password:
        </label>
        <input type="password" name="password" value={password} required onChange={(e)=>handlePassword(e)}/><br/>
        <button type="button" name='submit'onClick={collectData}>Submit</button>
      </header>
    </div>

  )
}

export default UpdateStudent


>>login.js

import React,{useState} from 'react'
import axios from 'axios'
import { useNavigate } from 'react-router-dom'

const Login = () => {
    let navigate=useNavigate()
    const [name,setName]=useState('')
    const [password,setPassword]=useState('')
    const handleUserChange=(e)=>{
        setName(e.target.value)
    }
    const handlePassChange=(e)=>{
        setPassword(e.target.value)
    }
    const collectData=async()=>{
        try{
        let loginData=axios.post('http://localhost:5000/login/login',{
            name,
            password
        })
        loginData=(await loginData).data;
        alert(loginData.name)
        if(loginData.name)
        {
            localStorage.setItem("login",JSON.stringify(loginData))
            navigate('/')
            navigate(0)
        }
        else
        {
            alert("Login or Password is incorrect")
        }
    }
    catch(error)
    {
        console.log(error)
    }
    }
  return (
    <div>
      <div className='App'>
      <header className='App-header'>
        <h3>Login Page</h3>
        <label>
            Name:
        </label>
        <input type="text" name="name" value={name} required onChange={(e)=>handleUserChange(e)}/><br/>
        <label>
            Password:
        </label>
        <input type="password" name="password" value={password} required onChange={(e)=>handlePassChange(e)}/><br/>
        <button type="button" name='submit'onClick={collectData}>Login</button>
        </header>
    </div>
    </div>
  )
}

export default Login

>>

>>route>login

const express=require('express')
const router=express.Router()
const logininfo=require('../models/student_models')

router.post('/login',async(req,res)=>{
    console.log(req.body)
    if(req.body.name && req.body.password)
    {
        let loginchk=await logininfo.findOne(req.body).select('-password')
        if(loginchk)
        {
            res.send(loginchk)
        }
        else
        {
            res.send({result:"Invalid login or password"})
        }
    }
    else{
        res.send({result:"Invalid login or password"})
    }
})

module.exports=router

>>logout.js

import React,{useEffect} from 'react'
import { useNavigate } from 'react-router-dom'

const Logout = () => {
    let navigate=useNavigate()
    useEffect(()=>{
        localStorage.clear()
        navigate('/',{replace:true})
        navigate(0)
    },[])
  return (
    <div>
      
    </div>
  )
}

export default Logout
